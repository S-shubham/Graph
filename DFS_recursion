// Write a recursive program to perfrom DFS traversal on graph withour using stack

 
#include<bits/stdc++.h>  
using namespace std;
   
 
void addedge(vector<int> adj[],int s,int d)
{
	adj[s].push_back(d);
}

void DFSutil(vector<int> adj[],int n ,bool visited[] ,int src)
{
	visited[src]=1;
	cout<<" "<<src<<" ";
	vector<int>:: iterator itr;
	for(itr=adj[src].begin();itr!=adj[src].end();++itr)
	if(visited[*itr]==0)
	DFSutil(adj,n,visited,*itr);
	
} 

void DFS(vector<int> adj[],int n)
{
	bool visited[n];
	for(int i=0;i<n;i++)
	visited[i]=0;
	
	DFSutil(adj,n,visited,0);
}

int main()
{
	int n=5;
	vector<int> adj[n];
	addedge(adj,0,1);
	addedge(adj,0,4);
	addedge(adj,1,2);
	addedge(adj,1,3);
	addedge(adj,3,2);
	addedge(adj,4,3);
	//addedge(adj,3,0);
	
	cout<<"\nStarting DFS on the graph  ";
	DFS(adj,n);
	
}
